"""Add is_active column to users table

Revision ID: a0e5ddf568a4
Revises: ae8a83f77df8
Create Date: 2025-09-11 14:18:59.972941

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a0e5ddf568a4'
down_revision: Union[str, Sequence[str], None] = 'ae8a83f77df8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_properties_price'), table_name='properties')
    op.drop_index(op.f('ix_properties_property_type'), table_name='properties')
    op.drop_index(op.f('ix_properties_status'), table_name='properties')
    op.drop_index(op.f('ix_properties_user_id'), table_name='properties')
    op.drop_table('properties')
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'is_active')
    op.create_table('properties',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('property_type', postgresql.ENUM('house', 'apartment', 'land', 'commercial', name='property_type_enum'), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('available', 'rented', 'sold', name='property_status_enum'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('mongo_document_id', sa.VARCHAR(length=24), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('properties_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('properties_pkey')),
    sa.UniqueConstraint('mongo_document_id', name=op.f('properties_mongo_document_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_properties_user_id'), 'properties', ['user_id'], unique=False)
    op.create_index(op.f('ix_properties_status'), 'properties', ['status'], unique=False)
    op.create_index(op.f('ix_properties_property_type'), 'properties', ['property_type'], unique=False)
    op.create_index(op.f('ix_properties_price'), 'properties', ['price'], unique=False)
    # ### end Alembic commands ###
